@startuml

interface PublisherFileIntReader<Int> {
  subscribe(s: Subscriber<? super R>): void
}

interface SubscriberFileIntReader<Int> {
  onSubscribe(s: Subscription): void
  onNext(t: T): void
  onError(t: Throwable): void
  onComplete(): void
}

interface SubscriptionFileIntReader {
  request(n: long): void
  cancel(): void
}

PublisherFileIntReader . SubscriptionFileIntReader : communicates >
SubscriptionFileIntReader . SubscriberFileIntReader : communicates <

scale 3
@enduml
